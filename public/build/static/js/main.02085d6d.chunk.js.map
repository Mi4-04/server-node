{"version":3,"sources":["components/Nav/style.js","components/Nav/Navbar.js","Pages/Home/style.js","Pages/Home/Home.js","Pages/Orders/orders.js","Pages/Executors/Executors.js","Pages/Auction/Auction.js","Pages/About/About.js","components/Auth/style.js","components/Auth/Auth.js","Pages/Login/style.js","utils/api.js","Pages/Register/request.js","const/index.js","Pages/Login/Login.js","Pages/Register/style.js","Pages/Register/index.jsx","App.js","serviceWorker.js","index.js"],"names":["StyledNav","styled","div","a","NavbarLight","expandSm","dark","start","exact","to","brand","center","end","m1","ligth","outline","GeneralTop","props","HeaderName","HeaderInfo1","HeaderInfo2","Iorders","button","IExecutors","Home","Helmet","title","ml9","mr9","Orders","Executors","Auction","About","NavLog","Auth","justified","tabs","NameAuth","FormControl","input","instance","axios","create","baseURL","responseType","method","data","url","request","Login","useForm","register","handleSubmit","onSubmit","console","log","action","name","type","placeholder","ref","required","muted","block","ErrorMsg","p","Register","errors","email","reqPassword","minLength","password","row","sm","surname","country","city","App","className","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"glBAIO,IAAMA,EAAYC,UAAOC,IAAV,K,GAKGD,UAAOE,EAAV,KAKMF,UAAOC,IAAV,K,OCNZE,EAAc,WACzB,OACE,kBAACJ,EAAD,KACE,kBAAC,SAAD,CAAQK,UAAQ,EAACC,MAAI,GACnB,kBAAC,MAAD,CAAKC,MAAM,QACT,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,KAChB,kBAAC,aAAD,CAAYH,MAAI,EAACI,OAAK,GAAtB,WAKJ,kBAAC,MAAD,CAAKC,QAAM,EAACN,UAAQ,GAClB,kBAAC,IAAD,CAASI,GAAG,IAAID,OAAK,GACnB,kBAAC,aAAD,CAAYF,MAAI,GAAhB,+CAGF,kBAAC,IAAD,CAASG,GAAG,WACV,kBAAC,aAAD,CAAYH,MAAI,GAAhB,yCAGF,kBAAC,IAAD,CAASG,GAAG,cACV,kBAAC,aAAD,CAAYH,MAAI,GAAhB,uEAEF,kBAAC,IAAD,CAASG,GAAG,YACV,kBAAC,aAAD,CAAYH,MAAI,GAAhB,+CAEF,kBAAC,IAAD,CAASG,GAAG,UACV,kBAAC,aAAD,CAAYH,MAAI,GAAhB,uDAIJ,kBAAC,MAAD,CAAKM,IAAI,OAAOP,UAAQ,GACtB,kBAAC,IAAD,CAASI,GAAG,WACV,kBAAC,SAAD,CAAQI,IAAE,EAACC,OAAK,EAACC,SAAO,GAAxB,2E,sjCCvCL,IAAMC,EAAaf,UAAOC,IAAV,KACP,SAACe,GAAD,OAAYA,EAAMX,KAAO,kBAAoB,WAClD,SAACW,GAAD,OAAYA,EAAMX,KAAO,QAAU,WAQjCY,EAAajB,UAAOC,IAAV,KAOViB,EAAclB,UAAOC,IAAV,KAOXkB,EAAcnB,UAAOC,IAAV,KAMXmB,EAAUpB,UAAOqB,OAAV,KAQPC,EAAatB,UAAOqB,OAAV,KChCVE,EAAO,WAClB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,+CACd,kBAACV,EAAD,CAAYV,MAAI,GACd,kBAAC,YAAD,KACE,kBAACY,EAAD,KACE,iIAGF,kBAACC,EAAD,KACE,qSAGF,kBAACC,EAAD,KACE,oLACA,8NACA,uSACA,iSAGF,kBAAC,gBAAD,CAAeT,QAAM,GACnB,kBAAC,cAAD,CAAagB,KAAG,EAACC,KAAG,GAClB,kBAAC,IAAD,CAASnB,GAAG,WACV,kBAAC,SAAD,CAAQH,MAAI,GACV,kBAACe,EAAD,mEAIN,kBAAC,cAAD,CAAaM,KAAG,GACd,kBAAC,IAAD,CAASlB,GAAG,WACV,kBAAC,SAAD,CAAQH,MAAI,GACV,kBAACiB,EAAD,0FCrCLM,EAAS,WACpB,OACE,6BACE,kBAACJ,EAAA,EAAD,CAAQC,MAAM,yCAEd,iHCLOI,EAAY,WACvB,OACE,6BACE,kBAACL,EAAA,EAAD,CAAQC,MAAM,uEAEd,0ICLOK,EAAU,WACrB,OACE,6BACE,kBAACN,EAAA,EAAD,CAAQC,MAAM,+CACd,4ECJOM,EAAQ,WACnB,OACE,6BACE,kBAACP,EAAA,EAAD,CAAQC,MAAM,sDACd,6D,wICLN,IAMeO,EANAhC,UAAOC,IAAV,KCSCgC,EAAO,WAClB,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,MAAD,CAAK5B,MAAI,EAAC6B,WAAS,EAACxB,QAAM,EAACyB,MAAI,GAC7B,kBAAC,IAAD,CAAS3B,GAAG,WAAZ,4BAEA,kBAAC,IAAD,CAASA,GAAG,WAAZ,0E,0iBChBH,IAAM4B,EAAWpC,UAAOC,IAAV,KAIRoC,EAAcrC,UAAOsC,MAAV,K,gBCGTC,E,OAPEC,EAAMC,OAAO,CAC5BC,QAAS,wBACTC,aAAc,SCDD,sBAAGC,cAAH,MCHI,MDGJ,EAAiBC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,IAAvB,OAAiCP,EAASQ,QAAQ,CAAEH,SAAQC,OAAMC,SEOpEE,EAAQ,WAAO,IAAD,EACUC,cAA3BC,EADiB,EACjBA,SAAUC,EADO,EACPA,aACZC,EAAQ,uCAAG,WAAOP,GAAP,SAAA3C,EAAA,6DACfmD,QAAQC,IAAIT,GADG,SAEQE,EAAQ,CAAEH,OAAQ,OAAQC,OAAMC,IAAK,YAF7C,yDAAH,sDAKd,OACE,6BACE,kBAACtB,EAAA,EAAD,CAAQC,MAAM,6BAEd,0BAAM8B,OAAO,UAAUX,OAAO,OAAOQ,SAAUD,EAAaC,IAC1D,kBAAC,EAAD,MACA,kBAAC,YAAD,KACE,kBAAChB,EAAD,KACE,2GAEF,kBAAC,YAAD,KACE,kBAACC,EAAD,CACEmB,KAAK,QACLC,KAAK,QACLC,YAAY,cACZC,IAAKT,EAAS,CAAEU,UAAU,MAG5B,kBAAC,WAAD,CAAUC,OAAK,GAAf,mDAEF,kBAAC,YAAD,KACE,kBAACxB,EAAD,CACEmB,KAAK,WACLC,KAAK,WACLC,YAAY,iBACZC,IAAKT,EAAS,CAAEU,UAAU,OAI9B,kBAAC,YAAD,KACE,kBAAC,SAAD,CAAQH,KAAK,SAASK,OAAK,EAACzD,MAAI,GAAhC,uC,mnBC7CL,IAAM+B,GAAWpC,UAAOC,IAAV,MAIRoC,GAAcrC,UAAOsC,MAAV,MAoBXyB,GAAW/D,UAAOgE,EAAV,MCkINC,I,OA5IE,WAAO,IAAD,EACsBhB,cAAnCC,EADa,EACbA,SAAUC,EADG,EACHA,aAAce,EADX,EACWA,OAC1Bd,EAAQ,uCAAG,WAAOP,GAAP,SAAA3C,EAAA,6DACfmD,QAAQC,IAAIT,GADG,SAEQE,EAAQ,CAAEH,OAAQ,OAAQC,OAAMC,IAAK,YAF7C,yDAAH,sDAgBd,OACE,6BACE,kBAACtB,EAAA,EAAD,CAAQC,MAAM,uEACd,kBAAC,EAAD,MAEA,0BAAM8B,OAAO,UAAUH,SAAUD,EAAaC,IAC5C,kBAAC,YAAD,KACE,kBAAC,GAAD,KACE,mGAGF,kBAAC,YAAD,KACE,uCAEE,kBAAC,GAAD,CACEK,KAAK,QACLC,YAAY,QACZF,KAAK,QACLG,IAAKT,EAAS,CAAEU,UAAU,QAI/BM,EAAOC,OAAqC,aAA5BD,EAAOE,YAAYX,MAClC,kBAACM,GAAD,yBAEF,kBAAC,YAAD,KACE,sEAEE,kBAAC,GAAD,CACEN,KAAK,WACLC,YAAY,WACZF,KAAK,WACLG,IAAKT,EAAS,CAAEU,UAAU,EAAMS,UAAW,QAIhDH,EAAOI,UAAqC,aAAzBJ,EAAOI,SAASb,MAClC,kBAACM,GAAD,yBAEDG,EAAOI,UAAqC,cAAzBJ,EAAOI,SAASb,MAClC,kBAACM,GAAD,uGAEF,kBAAC,YAAD,KACE,4GAEE,kBAAC,GAAD,CACEN,KAAK,WACLC,YAAY,kBACZF,KAAK,cACLG,IAAKT,EAAS,CAAEU,UAAU,EAAMS,UAAW,QAIhDH,EAAOE,aAA2C,aAA5BF,EAAOE,YAAYX,MACxC,kBAACM,GAAD,yBAEDG,EAAOE,aAA2C,cAA5BF,EAAOE,YAAYX,MACxC,kBAACM,GAAD,uGAEF,kBAAC,YAAD,CAAWQ,KAAG,GACZ,kBAAC,UAAD,CAAQC,GAAI,GACV,kBAAC,GAAD,CACEf,KAAK,OACLC,YAAY,UACZF,KAAK,UACLG,IAAKT,EAAS,CAAEU,UAAU,OAG7BM,EAAOO,SAAmC,aAAxBP,EAAOO,QAAQhB,MAChC,kBAACM,GAAD,yBAEF,kBAAC,UAAD,CAAQS,GAAI,GACV,kBAAC,GAAD,CACEf,KAAK,OACLC,YAAY,OACZF,KAAK,OACLG,IAAKT,EAAS,CAAEU,UAAU,OAG7BM,EAAOV,MAA6B,aAArBU,EAAOV,KAAKC,MAC1B,kBAACM,GAAD,0BAIJ,kBAAC,YAAD,CAAWQ,KAAG,GACZ,kBAAC,UAAD,CAAQC,GAAI,GACV,kBAAC,GAAD,CACEf,KAAK,OACLC,YAAY,UACZF,KAAK,UACLG,IAAKT,EAAS,CAAEU,UAAU,OAG7BM,EAAOQ,SAAmC,aAAxBR,EAAOQ,QAAQjB,MAChC,kBAACM,GAAD,yBAEF,kBAAC,UAAD,CAAQS,GAAI,GACV,kBAAC,YAAD,KACE,kBAAC,GAAD,CACEhB,KAAK,OACLC,KAAK,OACLC,YAAY,OACZC,IAAKT,EAAS,CAAEU,UAAU,QAI/BM,EAAOS,MAA6B,aAArBT,EAAOS,KAAKlB,MAC1B,kBAACM,GAAD,0BAIJ,kBAAC,YAAD,KACE,kBAAC,SAAD,CAAQN,KAAK,SAASK,OAAK,EAACzD,MAAI,GAAhC,4EChHGuE,OAtBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,mBACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIvE,OAAK,EAACwE,UAAWxD,IAEjC,kBAAC,IAAD,CAAOuD,KAAK,UAAUC,UAAWnD,IACjC,kBAAC,IAAD,CAAOkD,KAAK,aAAaC,UAAWlD,IACpC,kBAAC,IAAD,CAAOiD,KAAK,iBAAiBC,UAAWlD,IACxC,kBAAC,IAAD,CAAOiD,KAAK,WAAWC,UAAWjD,IAClC,kBAAC,IAAD,CAAOgD,KAAK,SAASC,UAAWhD,IAChC,kBAAC,IAAD,CAAO+C,KAAK,QAAQC,UAAW9C,IAC/B,kBAAC,IAAD,CAAO6C,KAAK,UAAUC,UAAW/B,IACjC,kBAAC,IAAD,CAAO8B,KAAK,UAAUC,UAAWd,SCfvBe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAGFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5C,QAAQ4C,MAAMA,EAAMC,a","file":"static/js/main.02085d6d.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\n\r\n\r\nexport const StyledNav = styled.div `\r\n  border: 1px solid rgba(2, 3, 3, 0.5);\r\n  box-shadow: 0 0 14px 0 rgba(3, 5, 7, 0.35);\r\n  \r\n`;\r\nexport const StyleNavL = styled.a `\r\ntext-decoration: none;\r\ncolor:#9a9d97;\r\npadding: 8px 8px 8px 8px;\r\n`;\r\nexport const StyleNavLDiv = styled.div `\r\n\r\nmargin-top: 5px;\r\n\r\n`;","import React from 'react';\n//import styled from 'styled-components';\nimport { Navbar, NavbarLink } from 'styled-navbar-component';\nimport { Nav } from 'styled-nav-component';\nimport { NavLink } from 'react-router-dom';\nimport { StyledNav } from './style';\nimport { Button } from 'styled-button-component';\n\nexport const NavbarLight = () => {\n  return (\n    <StyledNav>\n      <Navbar expandSm dark>\n        <Nav start=\"true\">\n          <NavLink exact to=\"/\">\n            <NavbarLink dark brand>\n              BRAND\n            </NavbarLink>\n          </NavLink>\n        </Nav>\n        <Nav center expandSm>\n          <NavLink to=\"/\" exact>\n            <NavbarLink dark>Главная</NavbarLink>\n          </NavLink>\n\n          <NavLink to=\"/orders\">\n            <NavbarLink dark>Заказы</NavbarLink>\n          </NavLink>\n\n          <NavLink to=\"/executors\">\n            <NavbarLink dark>Исполнители</NavbarLink>\n          </NavLink>\n          <NavLink to=\"/auction\">\n            <NavbarLink dark>Аукцион</NavbarLink>\n          </NavLink>\n          <NavLink to=\"/about\">\n            <NavbarLink dark>О проекте</NavbarLink>\n          </NavLink>\n        </Nav>\n\n        <Nav end=\"true\" expandSm>\n          <NavLink to=\"/signin\">\n            <Button m1 ligth outline>\n              Авторизация\n            </Button>\n          </NavLink>\n        </Nav>\n      </Navbar>\n    </StyledNav>\n  );\n};\n","import styled from 'styled-components';\r\n\r\nexport const GeneralTop = styled.div `\r\n  background: ${(props) => (props.dark ? 'rgb(41, 43, 44)' : 'black')};\r\n  color: ${(props) => (props.dark ? 'white' : 'black')};\r\n  height: 500px;\r\n  padding-top: 30px;\r\n  border: 1px solid rgba(2, 3, 3, 0.5);\r\n  margin-top: 30px;\r\n  box-shadow: 0 0 14px 0 rgba(3, 5, 7, 0.35);\r\n`;\r\n\r\nexport const HeaderName = styled.div `\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 35px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const HeaderInfo1 = styled.div `\r\n  text-align: center;\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const HeaderInfo2 = styled.div `\r\n  text-align: center;\r\n  font-size: 18px;\r\n  line-height: 1;\r\n  margin-bottom: 40px;\r\n`;\r\nexport const Iorders = styled.button `\r\n  width: 160px;\r\n  height: 60px;\r\n  border: 1px solid rgba(2, 3, 3, 0.5);\r\n\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const IExecutors = styled.button `\r\n  width: 160px;\r\n  height: 60px;\r\n  border: 1px solid rgba(2, 3, 3, 0.5);\r\n\r\n  font-size: 16px;\r\n`;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { NavLink } from 'react-router-dom';\n//import styled from 'styled-components';\nimport { Container } from 'styled-container-component';\nimport { Button, ButtonGroup, ButtonToolbar } from 'styled-button-component';\nimport { GeneralTop, HeaderName, HeaderInfo1, HeaderInfo2, Iorders, IExecutors } from './style';\n\nexport const Home = () => {\n  return (\n    <div>\n      <Helmet title=\"Главная\" />\n      <GeneralTop dark>\n        <Container>\n          <HeaderName>\n            <p>Услуги дизайнеров</p>\n          </HeaderName>\n\n          <HeaderInfo1>\n            <p> Disigner – более тысячи заказов каждый день, 1.5М дизайнеров</p>\n          </HeaderInfo1>\n\n          <HeaderInfo2>\n            <p> Работа по безопасной сделке.</p>\n            <p>Честные отзывы и актуальный рейтинг.</p>\n            <p>Широкие возможности для заказчиков и фрилансеров.</p>\n            <p>Достойное вознаграждение и ожидаемый результат.</p>\n          </HeaderInfo2>\n\n          <ButtonToolbar center>\n            <ButtonGroup ml9 mr9>\n              <NavLink to=\"/signin\">\n                <Button dark>\n                  <Iorders>Я заказчик</Iorders>\n                </Button>\n              </NavLink>\n            </ButtonGroup>\n            <ButtonGroup ml9>\n              <NavLink to=\"/signin\">\n                <Button dark>\n                  <IExecutors>Я исполнитель</IExecutors>\n                </Button>\n              </NavLink>\n            </ButtonGroup>\n          </ButtonToolbar>\n        </Container>\n      </GeneralTop>\n    </div>\n  );\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nexport const Orders = () => {\n  return (\n    <div>\n      <Helmet title=\"Заказы\" />\n\n      <h1>Список заказов</h1>\n    </div>\n  );\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nexport const Executors = () => {\n  return (\n    <div>\n      <Helmet title=\"Исполнители\" />\n\n      <h1> Рейтинг заказчиков</h1>\n    </div>\n  );\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nexport const Auction = () => {\n  return (\n    <div>\n      <Helmet title=\"Аукцион\" />\n      <h1>Аукцион</h1>\n    </div>\n  );\n};\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nexport const About = () => {\n  return (\n    <div>\n      <Helmet title=\"О проекте\" />\n      <h1> О нас </h1>\n    </div>\n  );\n};\n","import styled from 'styled-components'\r\n\r\nconst NavLog = styled.div `\r\n  margin-top: 20px;\r\n  margin-bottom: 50px;\r\n  font-size: 30px;\r\n`;\r\n\r\nexport default NavLog;","import React from 'react';\r\nimport { Nav } from 'styled-nav-component';\r\nimport { NavLink } from 'react-router-dom';\r\nimport NavLog from './style';\r\n\r\n/*const NavLog = styled.div`\r\n  margin-top: 20px;\r\n  margin-bottom: 50px;\r\n  font-size: 30px;\r\n`;*/\r\n\r\nexport const Auth = () => {\r\n  return (\r\n    <div>\r\n      <NavLog>\r\n        <Nav dark justified center tabs>\r\n          <NavLink to=\"/signin\">Вход</NavLink>\r\n\r\n          <NavLink to=\"/signup\">Регистрация</NavLink>\r\n        </Nav>\r\n      </NavLog>\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const NameAuth = styled.div `\r\n  text-align: center;\r\n`;\r\n\r\nexport const FormControl = styled.input `\r\n    display: block;\r\n    box-sizing: border-box;\r\n    border:1px solid #bebebe;\r\n    padding: 10px;\r\n    margin: 0 0 5px;\r\n    width: 100%;\r\n    outline:none;\r\n    transition: all 300ms ease-in-out;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 1px 1px #0e0e0e;\r\n    cursor: pointer;\r\n\r\n    :hover{\r\n     background: rgba(195, 195, 190, .2);\r\n   }\r\n\r\n   }\r\n`;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:3000',\r\n  responseType: 'json',\r\n});\r\n\r\n//instance.defaults.headers.common['Authorization'] = 'AUTH TOKEN FROM INSTANSE';\r\n\r\nexport default instance;\r\n","import instance from '../../utils/api';\r\nimport { GET } from '../../const';\r\n\r\nexport default ({ method = GET, data, url }) => instance.request({ method, data, url });\r\n","export const GET = 'GET';\r\nexport const POST = 'POST';\r\nexport const PATCH = 'PATCH';\r\nexport const DELETE = 'DELETE';\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { Auth } from '../../components/Auth/Auth';\r\nimport { FormGroup, FormText } from 'styled-form-component';\r\nimport { Button } from 'styled-button-component';\r\nimport { Container } from 'styled-container-component';\r\nimport { NameAuth, FormControl } from './style';\r\nimport { useForm } from 'react-hook-form';\r\nimport request from '../Register/request';\r\n\r\nexport const Login = () => {\r\n  const { register, handleSubmit } = useForm();\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    const response = await request({ method: 'post', data, url: '/signin' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Вход\" />\r\n\r\n      <form action=\"/signin\" method=\"POST\" onSubmit={handleSubmit(onSubmit)}>\r\n        <Auth />\r\n        <Container>\r\n          <NameAuth>\r\n            <h1>Вход в систему</h1>\r\n          </NameAuth>\r\n          <FormGroup>\r\n            <FormControl\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <FormText muted>We&#39;ll never share your email with anyone else.</FormText>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <FormControl\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Button type=\"submit\" block dark>\r\n              Войти\r\n            </Button>\r\n          </FormGroup>\r\n        </Container>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const NameAuth = styled.div `\r\n  text-align: center;\r\n`;\r\n\r\nexport const FormControl = styled.input `\r\n    display: block;\r\n    box-sizing: border-box;\r\n    border:1px solid #bebebe;\r\n    padding: 10px;\r\n    margin: 0 0 5px;\r\n    width: 100%;\r\n    outline:none;\r\n    transition: all 300ms ease-in-out;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 1px 1px #0e0e0e;\r\n    cursor: pointer;\r\n   :hover{\r\n     background: rgba(195, 195, 190, .2);\r\n   }\r\n   \r\n\r\n   }\r\n`;\r\n\r\nexport const ErrorMsg = styled.p `\r\n\r\ncolor: red;\r\n\r\n`;","import React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Auth } from '../../components/Auth/Auth';\r\nimport { FormGroup } from 'styled-form-component';\r\nimport { Button } from 'styled-button-component';\r\nimport { Container } from 'styled-container-component';\r\nimport { Column } from 'styled-grid-system-component';\r\nimport { NameAuth, FormControl, ErrorMsg } from './style';\r\nimport request from './request';\r\nimport useAsyncEffect from 'use-async-effect';\r\nimport axios from 'axios';\r\n\r\n//import axios from '../../utils/api';\r\n//import useAxios from 'axios-hooks';\r\n\r\nconst Register = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    const response = await request({ method: 'post', data, url: '/signup' });\r\n  };\r\n\r\n  /* useAsyncEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios('http://localhost:3000/signup');\r\n      handleSubmit(result.data);\r\n    };\r\n    fetchData();\r\n  }, []);*/\r\n  // useAsyncEffect(async () => {\r\n  //   const response = await request({ url: '/signup' });\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Регистрация\" />\r\n      <Auth />\r\n\r\n      <form action=\"/signup\" onSubmit={handleSubmit(onSubmit)}>\r\n        <Container>\r\n          <NameAuth>\r\n            <h1>Регистрация</h1>\r\n          </NameAuth>\r\n\r\n          <FormGroup>\r\n            <label>\r\n              Email\r\n              <FormControl\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </label>\r\n          </FormGroup>\r\n          {errors.email && errors.reqPassword.type === 'required' && (\r\n            <ErrorMsg>This is required</ErrorMsg>\r\n          )}\r\n          <FormGroup>\r\n            <label>\r\n              Пароль\r\n              <FormControl\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                ref={register({ required: true, minLength: 6 })}\r\n              />\r\n            </label>\r\n          </FormGroup>\r\n          {errors.password && errors.password.type === 'required' && (\r\n            <ErrorMsg>This is required</ErrorMsg>\r\n          )}\r\n          {errors.password && errors.password.type === 'minLength' && (\r\n            <ErrorMsg>Минимум 6 символов </ErrorMsg>\r\n          )}\r\n          <FormGroup>\r\n            <label>\r\n              Пароль еще раз\r\n              <FormControl\r\n                type=\"password\"\r\n                placeholder=\"Repeat password\"\r\n                name=\"reqPassword\"\r\n                ref={register({ required: true, minLength: 6 })}\r\n              />\r\n            </label>\r\n          </FormGroup>\r\n          {errors.reqPassword && errors.reqPassword.type === 'required' && (\r\n            <ErrorMsg>This is required</ErrorMsg>\r\n          )}\r\n          {errors.reqPassword && errors.reqPassword.type === 'minLength' && (\r\n            <ErrorMsg>Минимум 6 символов </ErrorMsg>\r\n          )}\r\n          <FormGroup row>\r\n            <Column sm={6}>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Surname\"\r\n                name=\"surname\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Column>\r\n            {errors.surname && errors.surname.type === 'required' && (\r\n              <ErrorMsg>This is required</ErrorMsg>\r\n            )}\r\n            <Column sm={6}>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Column>\r\n            {errors.name && errors.name.type === 'required' && (\r\n              <ErrorMsg>This is required</ErrorMsg>\r\n            )}\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Column sm={8}>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Country\"\r\n                name=\"country\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Column>\r\n            {errors.country && errors.country.type === 'required' && (\r\n              <ErrorMsg>This is required</ErrorMsg>\r\n            )}\r\n            <Column sm={4}>\r\n              <FormGroup>\r\n                <FormControl\r\n                  name=\"city\"\r\n                  type=\"text\"\r\n                  placeholder=\"City\"\r\n                  ref={register({ required: true })}\r\n                />\r\n              </FormGroup>\r\n            </Column>\r\n            {errors.city && errors.city.type === 'required' && (\r\n              <ErrorMsg>This is required</ErrorMsg>\r\n            )}\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Button type=\"submit\" block dark>\r\n              Регистрация\r\n            </Button>\r\n          </FormGroup>\r\n        </Container>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { NavbarLight } from './components/Nav/Navbar';\nimport { Home } from './Pages/Home/Home';\nimport { Orders } from './Pages/Orders/orders';\nimport { Executors } from './Pages/Executors/Executors';\nimport { Auction } from './Pages/Auction/Auction';\nimport { About } from './Pages/About/About';\nimport { Auth } from './components/Auth/Auth';\nimport { Login } from './Pages/Login/Login';\nimport Register from './Pages/Register';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"container pt-4 \">\n        <NavbarLight />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/executors\" component={Executors} />\n          <Route path=\"/executors/:id\" component={Executors} />\n          <Route path=\"/auction\" component={Auction} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/signin\" component={Login} />\n          <Route path=\"/signup\" component={Register} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Nav/style.js","context/auth.js","context/types.js","components/Nav/Navbar.js","Pages/Home/style.js","Pages/Home/Home.js","Pages/Orders/orders.js","Pages/Executors/Executors.js","Pages/Auction/Auction.js","Pages/About/About.js","components/Auth/style.js","components/Auth/Auth.js","Pages/Login/style.js","utils/api.js","Pages/Register/request.js","const/index.js","Pages/Login/Login.js","Pages/Register/style.js","Pages/Register/index.jsx","components/Auth/AuthRoute.js","App.js","serviceWorker.js","index.js"],"names":["StyledNav","styled","div","a","initialState","user","jwtToken","localStorage","getItem","decodedToken","jwt_decode","exp","Date","now","removeItem","AuthContext","createContext","signin","data","logout","AuthReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","token","setItem","LoginButton","to","m1","ligth","outline","onClick","LogoutButton","NavbarLight","useContext","expandSm","dark","start","exact","brand","center","end","GeneralTop","HeaderName","HeaderInfo1","HeaderInfo2","Iorders","button","IExecutors","Home","Helmet","title","ml9","mr9","Orders","Executors","Auction","About","NavLog","Auth","justified","tabs","NameAuth","FormControl","input","Button","instance","axios","create","baseURL","responseType","method","url","request","Login","context","useForm","register","handleSubmit","onSubmit","response","history","push","name","placeholder","ref","required","muted","ErrorMsg","p","DivSelect","LabelSelect","label","Register","errors","console","log","email","reqPassword","minLength","password","row","sm","surname","country","city","inline","typeUser","block","AuthRoute","Component","component","args","render","App","className","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1bda3d46.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\n\r\n\r\nexport const StyledNav = styled.div `\r\n  border: 1px solid rgba(2, 3, 3, 0.5);\r\n  box-shadow: 0 0 14px 0 rgba(3, 5, 7, 0.35);\r\n  \r\n`;\r\nexport const StyleNavL = styled.a `\r\ntext-decoration: none;\r\ncolor:#9a9d97;\r\npadding: 8px 8px 8px 8px;\r\n`;\r\nexport const StyleNavLDiv = styled.div `\r\n\r\nmargin-top: 5px;\r\n\r\n`;","import React, {createContext} from 'react'\r\nimport { useReducer } from 'react';\r\nimport { SIGNIN, LOGOUT } from './types';\r\nimport jwt_decode  from 'jwt-decode'\r\n\r\n\r\nconst initialState = {\r\n    user: null\r\n}\r\n\r\nconst jwtToken = localStorage.getItem('token');\r\n\r\nif(jwtToken) {\r\n    const decodedToken  = jwt_decode(jwtToken)\r\n    \r\n    if(decodedToken.exp * 1000 < Date.now()) {\r\n        localStorage.removeItem('token')\r\n    }else {\r\n      \r\n        initialState.user  = decodedToken\r\n    }\r\n}\r\n\r\n const AuthContext =  createContext({\r\n    user: null, \r\n    signin: (data) => {},\r\n    logout: () => {}\r\n})\r\n\r\nconst AuthReducer = (state, action) => {\r\n    switch(action.type) {\r\ncase SIGNIN: \r\nreturn {\r\n    ...state,\r\n    user: action.payload\r\n};\r\n\r\ncase LOGOUT:\r\n\r\nreturn {\r\n    ...state,\r\n    user: null\r\n};\r\n\r\n        default: \r\n        return state\r\n    }\r\n}\r\n \r\n\r\n const AuthProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AuthReducer,initialState)\r\n\r\n    const signin = (token) => {\r\n\r\n        localStorage.setItem('token',  token)\r\n\r\n     dispatch({\r\n        type: SIGNIN,\r\n        payload: token\r\n\r\n})\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token')\r\ndispatch({\r\n    type: LOGOUT,\r\n})\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n         value = {{user: state.user, logout, signin}} \r\n          {...props}/>\r\n    )\r\n}\r\n\r\n\r\nexport    {AuthProvider, AuthContext}\r\n","export const SIGNIN = \"SIGNIN\"\r\nexport const LOGOUT = \"LOGOUT\"\r\n","import React, {  useContext, useState } from 'react';\r\nimport { Navbar, NavbarLink } from 'styled-navbar-component';\r\nimport { Nav } from 'styled-nav-component';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { StyledNav } from './style';\r\nimport { Button } from 'styled-button-component';\r\nimport { AuthContext } from '../../context/auth';\r\n\r\nfunction LoginButton(props) {\r\n  return (\r\n    <NavLink to=\"/signin\">\r\n      <Button m1 ligth outline onClick={props.onClick}>\r\n        Авторизация\r\n      </Button>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nfunction LogoutButton(props) {\r\n  return (\r\n    <NavLink to=\"/\">\r\n      <Button m1 ligth outline onClick={props.onClick}>\r\n        Выход\r\n      </Button>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport const NavbarLight = () => {\r\n  const {user, logout} = useContext(AuthContext)\r\n\r\n  const navbarLayout =   (\r\n    <StyledNav>\r\n    <Navbar expandSm dark>\r\n      <Nav start=\"true\">\r\n        <NavLink exact to=\"/\">\r\n          <NavbarLink dark brand>\r\n            BRAND\r\n          </NavbarLink>\r\n        </NavLink>\r\n      </Nav>\r\n      <Nav center expandSm>\r\n        <NavLink to=\"/\" exact>\r\n          <NavbarLink dark>Главная</NavbarLink>\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/orders\">\r\n          <NavbarLink dark>Заказы</NavbarLink>\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/executors\">\r\n          <NavbarLink dark>Исполнители</NavbarLink>\r\n        </NavLink>\r\n        <NavLink to=\"/auction\">\r\n          <NavbarLink dark>Аукцион</NavbarLink>\r\n        </NavLink>\r\n        <NavLink to=\"/about\">\r\n          <NavbarLink dark>О проекте</NavbarLink>\r\n        </NavLink>\r\n      </Nav>\r\n\r\n      <Nav end=\"true\" expandSm>\r\n        {user ? <LogoutButton onClick = {logout} /> : <LoginButton />}\r\n      </Nav>\r\n    </Navbar>\r\n  </StyledNav>\r\n  ) \r\n\r\n  return navbarLayout;\r\n\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const GeneralTop = styled.div `\r\n  background: ${(props) => (props.dark ? 'rgb(41, 43, 44)' : 'black')};\r\n  color: ${(props) => (props.dark ? 'white' : 'black')};\r\n  height: 500px;\r\n  padding-top: 30px;\r\n  border: 1px solid rgba(2, 3, 3, 0.5);\r\n  margin-top: 30px;\r\n  box-shadow: 0 0 14px 0 rgba(3, 5, 7, 0.35);\r\n`;\r\n\r\nexport const HeaderName = styled.div `\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 35px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const HeaderInfo1 = styled.div `\r\n  text-align: center;\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const HeaderInfo2 = styled.div `\r\n  text-align: center;\r\n  font-size: 18px;\r\n  line-height: 1;\r\n  margin-bottom: 40px;\r\n`;\r\nexport const Iorders = styled.button `\r\n  width: 160px;\r\n  height: 60px;\r\n  border: 1px solid rgba(2, 3, 3, 0.5);\r\n\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const IExecutors = styled.button `\r\n  width: 160px;\r\n  height: 60px;\r\n  border: 1px solid rgba(2, 3, 3, 0.5);\r\n\r\n  font-size: 16px;\r\n`;","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { NavLink } from 'react-router-dom';\r\n//import styled from 'styled-components';\r\nimport { Container } from 'styled-container-component';\r\nimport { Button, ButtonGroup, ButtonToolbar } from 'styled-button-component';\r\nimport { GeneralTop, HeaderName, HeaderInfo1, HeaderInfo2, Iorders, IExecutors } from './style';\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Главная\" />\r\n      <GeneralTop dark>\r\n        <Container>\r\n          <HeaderName>\r\n            <p>Услуги дизайнеров</p>\r\n          </HeaderName>\r\n\r\n          <HeaderInfo1>\r\n            <p> Disigner – более тысячи заказов каждый день, 1.5М дизайнеров</p>\r\n          </HeaderInfo1>\r\n\r\n          <HeaderInfo2>\r\n            <p> Работа по безопасной сделке.</p>\r\n            <p>Честные отзывы и актуальный рейтинг.</p>\r\n            <p>Широкие возможности для заказчиков и фрилансеров.</p>\r\n            <p>Достойное вознаграждение и ожидаемый результат.</p>\r\n          </HeaderInfo2>\r\n\r\n          <ButtonToolbar center>\r\n            <ButtonGroup ml9 mr9>\r\n              <NavLink to=\"/signin\">\r\n                <Button dark>\r\n                  <Iorders>Я заказчик</Iorders>\r\n                </Button>\r\n              </NavLink>\r\n            </ButtonGroup>\r\n            <ButtonGroup ml9>\r\n              <NavLink to=\"/signin\">\r\n                <Button dark>\r\n                  <IExecutors>Я исполнитель</IExecutors>\r\n                </Button>\r\n              </NavLink>\r\n            </ButtonGroup>\r\n          </ButtonToolbar>\r\n        </Container>\r\n      </GeneralTop>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nexport const Orders = () => {\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Заказы\" />\r\n\r\n      <h1>Список заказов</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nexport const Executors = () => {\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Исполнители\" />\r\n\r\n      <h1> Рейтинг заказчиков</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nexport const Auction = () => {\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Аукцион\" />\r\n      <h1>Аукцион</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div>\r\n      <Helmet title=\"О проекте\" />\r\n      <h1> О нас </h1>\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components'\r\n\r\nconst NavLog = styled.div `\r\n  margin-top: 20px;\r\n  margin-bottom: 50px;\r\n  font-size: 30px;\r\n`;\r\n\r\nexport default NavLog;","import React from 'react';\r\nimport { Nav } from 'styled-nav-component';\r\nimport { NavLink } from 'react-router-dom';\r\nimport NavLog from './style';\r\n\r\n\r\nexport const Auth = () => {\r\n  return (\r\n    <div>\r\n      <NavLog>\r\n        <Nav dark justified center tabs>\r\n          <NavLink to=\"/signin\">Вход</NavLink>\r\n\r\n          <NavLink to=\"/signup\">Регистрация</NavLink>\r\n        </Nav>\r\n      </NavLog>\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const NameAuth = styled.div `\r\n  text-align: center;\r\n`;\r\n\r\nexport const FormControl = styled.input `\r\n    display: block;\r\n    box-sizing: border-box;\r\n    border:1px solid #bebebe;\r\n    padding: 10px;\r\n    margin: 0 0 5px;\r\n    width: 100%;\r\n    outline:none;\r\n    transition: all 300ms ease-in-out;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 1px 1px #0e0e0e;\r\n    cursor: pointer;\r\n\r\n    :hover{\r\n     background: rgba(195, 195, 190, .2);\r\n   }\r\n\r\n   }\r\n`;\r\n\r\nexport const Button = styled.button `\r\n\r\ndisplay: block;\r\nbackground: #343a40;\r\ncolor: rgb(256,256, 256);\r\nfont-size: 16px;\r\nwidth: 100%;\r\npadding: 10px;\r\nborder-radius: 5px;\r\n:hover{\r\n  background: #23272b;\r\n}\r\n`;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:3000',\r\n  responseType: 'json',\r\n});\r\n\r\n\r\nexport default instance;\r\n","import instance from '../../utils/api';\r\nimport { GET } from '../../const';\r\n\r\nexport default ({ method = GET, data, url }) => instance.request({ method, data, url });\r\n","export const GET = 'GET';\r\nexport const POST = 'POST';\r\nexport const PATCH = 'PATCH';\r\nexport const DELETE = 'DELETE';\r\n","import React, {useContext} from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { Auth } from '../../components/Auth/Auth';\r\nimport { FormGroup, FormText } from 'styled-form-component';\r\nimport { Container } from 'styled-container-component';\r\nimport { NameAuth, FormControl, Button } from './style';\r\nimport { useForm } from 'react-hook-form';\r\nimport request from '../Register/request';\r\nimport { AuthContext } from '../../context/auth';\r\n\r\n\r\n\r\nexport const Login = (props) => {\r\n\r\n  const context = useContext(AuthContext)\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n\r\n    const response = await request({ method: 'post', data, url: '/signin' })\r\n    \r\n    context.signin(response.data.token)\r\n    props.history.push('/orders')\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Вход\" />\r\n\r\n      <form action=\"/signin\" method=\"POST\" onSubmit={handleSubmit(onSubmit)}>\r\n        <Auth />\r\n        <Container>\r\n          <NameAuth>\r\n            <h1>Вход в систему</h1>\r\n          </NameAuth>\r\n          <FormGroup>\r\n            <FormControl\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <FormText muted>We&#39;ll never share your email with anyone else.</FormText>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <FormControl\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Button  type=\"submit\"  >\r\n              \r\n              Войти\r\n            </Button>\r\n          </FormGroup>\r\n        </Container>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const NameAuth = styled.div `\r\n  text-align: center;\r\n`;\r\n\r\nexport const FormControl = styled.input `\r\n    display: block;\r\n    box-sizing: border-box;\r\n    border:1px solid #bebebe;\r\n    padding: 10px;\r\n    margin: 0 0 5px;\r\n    width: 100%;\r\n    outline:none;\r\n    transition: all 300ms ease-in-out;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 1px 1px #0e0e0e;\r\n    cursor: pointer;\r\n   :hover{\r\n     background: rgba(195, 195, 190, .2);\r\n   }\r\n   \r\n\r\n   }\r\n`;\r\n\r\nexport const ErrorMsg = styled.p `\r\n\r\ncolor: red;\r\n\r\n`;\r\n\r\nexport const DivSelect = styled.div `\r\n\r\ntext-align: center;\r\n\r\n`;\r\n\r\nexport const LabelSelect  =styled.label `\r\nfont-size: 18px;\r\npadding-bottom: 25px;\r\nmargin-left: 25px;\r\nmargin-right:15px;\r\n\r\n\r\n`;\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Auth } from '../../components/Auth/Auth';\r\nimport { FormGroup, FormCheck, FormCheckInput  } from 'styled-form-component';\r\nimport { Button } from 'styled-button-component';\r\nimport { Container } from 'styled-container-component';\r\nimport { Column } from 'styled-grid-system-component';\r\nimport { NameAuth, FormControl, ErrorMsg, LabelSelect, DivSelect } from './style';\r\nimport request from './request';\r\nimport { useContext } from 'react';\r\nimport {AuthContext} from '../../context/auth'\r\n\r\nconst Register = (props) => {\r\n  \r\n  const { register, handleSubmit, errors } = useForm();\r\n  const context = useContext(AuthContext)\r\n  const onSubmit = async (data) => {\r\n    const response = await request({ method: 'post', data , url: '/signup' })\r\n    console.log(data)\r\n    context.signin(data)\r\n    props.history.push('/signin');\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Регистрация\" />\r\n      <Auth />\r\n\r\n      <form action=\"/signup\" onSubmit={handleSubmit(onSubmit)}>\r\n        <Container>\r\n          <NameAuth>\r\n            <h1>Регистрация</h1>\r\n          </NameAuth>\r\n\r\n          <FormGroup>\r\n            <label>\r\n              Email\r\n              <FormControl\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </label>\r\n          </FormGroup>\r\n          {errors.email && errors.reqPassword.type === 'required' && (\r\n            <ErrorMsg>This is required</ErrorMsg>\r\n          )}\r\n          <FormGroup>\r\n            <label>\r\n              Пароль\r\n              <FormControl\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                ref={register({ required: true, minLength: 6 })}\r\n              />\r\n            </label>\r\n          </FormGroup>\r\n          {errors.password && errors.password.type === 'required' && (\r\n            <ErrorMsg>This is required</ErrorMsg>\r\n          )}\r\n          {errors.password && errors.password.type === 'minLength' && (\r\n            <ErrorMsg>Минимум 6 символов </ErrorMsg>\r\n          )}\r\n          <FormGroup>\r\n            <label>\r\n              Пароль еще раз\r\n              <FormControl\r\n                type=\"password\"\r\n                placeholder=\"Repeat password\"\r\n                name=\"reqPassword\"\r\n                ref={register({ required: true, minLength: 6 })}\r\n              />\r\n            </label>\r\n          </FormGroup>\r\n          {errors.reqPassword && errors.reqPassword.type === 'required' && (\r\n            <ErrorMsg>This is required</ErrorMsg>\r\n          )}\r\n          {errors.reqPassword && errors.reqPassword.type === 'minLength' && (\r\n            <ErrorMsg>Минимум 6 символов </ErrorMsg>\r\n          )}\r\n          \r\n          <FormGroup row>\r\n            <Column sm={6}>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Surname\"\r\n                name=\"surname\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Column>\r\n            {errors.surname && errors.surname.type === 'required' && (\r\n              <ErrorMsg>This is required</ErrorMsg>\r\n            )}\r\n            <Column sm={6}>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Column>\r\n            {errors.name && errors.name.type === 'required' && (\r\n              <ErrorMsg>This is required</ErrorMsg>\r\n            )}\r\n          </FormGroup>\r\n\r\n          <FormGroup row>\r\n            <Column sm={8}>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Country\"\r\n                name=\"country\"\r\n                ref={register({ required: true })}\r\n              />\r\n            </Column>\r\n            {errors.country && errors.country.type === 'required' && (\r\n              <ErrorMsg>This is required</ErrorMsg>\r\n            )}\r\n            <Column sm={4}>\r\n              <FormGroup>\r\n                <FormControl\r\n                  name=\"city\"\r\n                  type=\"text\"\r\n                  placeholder=\"City\"\r\n                  ref={register({ required: true })}\r\n                />\r\n              </FormGroup>\r\n            </Column>\r\n            {errors.city && errors.city.type === 'required' && (\r\n              <ErrorMsg>This is required</ErrorMsg>\r\n            )}\r\n          </FormGroup>\r\n         <DivSelect>\r\n          <FormCheck inline >\r\n        <LabelSelect>\r\n          <FormCheckInput type=\"radio\" name=\"typeUser\" value = \"iCustomer\" ref={register({ required: true })} /> Я заказчик\r\n        </LabelSelect>\r\n      </FormCheck>\r\n      <FormCheck inline >\r\n        <LabelSelect>\r\n          <FormCheckInput  type=\"radio\" name=\"typeUser\" value = \"iExecutor\" ref={register({ required: true })} /> Я исполнитель\r\n        </LabelSelect>\r\n      </FormCheck>\r\n      {errors.typeUser && errors.typeUser.type === 'required' && (\r\n              <ErrorMsg>This is required</ErrorMsg>\r\n            )}\r\n      </DivSelect>\r\n          <FormGroup>\r\n            <Button type=\"submit\"  block dark>\r\n              Регистрация\r\n            </Button>\r\n          </FormGroup>\r\n        </Container>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react'\r\nimport { useContext } from 'react'\r\nimport {AuthContext} from '../../context/auth'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nconst AuthRoute = ({component: Component, ...args}) => {\r\n\r\nconst {user} = useContext(AuthContext) \r\n\r\n    return (\r\n        //Роут с проверкой на то чтобы когда ты авторизован ты не мог зайти в signin или signup \r\n        <Route {...args} \r\n        render = {(props) =>\r\n             !user ? <Component {...props}/> : <Redirect to = \"/orders\" /> }/>\r\n    )\r\n}\r\n\r\nexport default AuthRoute\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { NavbarLight } from './components/Nav/Navbar';\r\nimport { Home } from './Pages/Home/Home';\r\nimport { Orders } from './Pages/Orders/orders';\r\nimport { Executors } from './Pages/Executors/Executors';\r\nimport { Auction } from './Pages/Auction/Auction';\r\nimport { About } from './Pages/About/About';\r\nimport { Auth } from './components/Auth/Auth';\r\nimport { Login } from './Pages/Login/Login';\r\nimport Register from './Pages/Register';\r\nimport { AuthProvider } from './context/auth';\r\nimport AuthRoute from './components/Auth/AuthRoute'\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n  <AuthProvider>\r\n    <BrowserRouter>\r\n    \r\n      <div className=\"container pt-4 \">\r\n        <NavbarLight />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n\r\n          <Route path=\"/orders\" component={Orders} />\r\n          <Route path=\"/executors\" component={Executors} />\r\n          <Route path=\"/executors/:id\" component={Executors} />\r\n          <Route path=\"/auction\" component={Auction} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/auth\" component={Auth} />\r\n          <AuthRoute path=\"/signin\" component={Login} />\r\n          <Route path=\"/signup\" component={Register} />\r\n       \r\n        </Switch>\r\n      </div>\r\n      \r\n    </BrowserRouter>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}